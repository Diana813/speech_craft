// Mocks generated by Mockito 5.4.4 from annotations
// in speech_craft/test/data/data_sources/translation_remote_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:speech_craft/data/data_sources/translation_data/translation_request_builder.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTranslationRequestBuilder_0 extends _i1.SmartFake
    implements _i2.TranslationRequestBuilder {
  _FakeTranslationRequestBuilder_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1 extends _i1.SmartFake implements _i3.Response {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TranslationRequestBuilder].
///
/// See the documentation for Mockito's code generation for more information.
class MockTranslationRequestBuilder extends _i1.Mock
    implements _i2.TranslationRequestBuilder {
  @override
  String get keywords => (super.noSuchMethod(
        Invocation.getter(#keywords),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#keywords),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#keywords),
        ),
      ) as String);

  @override
  set keywords(String? _keywords) => super.noSuchMethod(
        Invocation.setter(
          #keywords,
          _keywords,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get languageCode => (super.noSuchMethod(
        Invocation.getter(#languageCode),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#languageCode),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#languageCode),
        ),
      ) as String);

  @override
  set languageCode(String? _languageCode) => super.noSuchMethod(
        Invocation.setter(
          #languageCode,
          _languageCode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.TranslationRequestBuilder withKeywords(String? keywords) =>
      (super.noSuchMethod(
        Invocation.method(
          #withKeywords,
          [keywords],
        ),
        returnValue: _FakeTranslationRequestBuilder_0(
          this,
          Invocation.method(
            #withKeywords,
            [keywords],
          ),
        ),
        returnValueForMissingStub: _FakeTranslationRequestBuilder_0(
          this,
          Invocation.method(
            #withKeywords,
            [keywords],
          ),
        ),
      ) as _i2.TranslationRequestBuilder);

  @override
  _i2.TranslationRequestBuilder withLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #withLanguageCode,
          [languageCode],
        ),
        returnValue: _FakeTranslationRequestBuilder_0(
          this,
          Invocation.method(
            #withLanguageCode,
            [languageCode],
          ),
        ),
        returnValueForMissingStub: _FakeTranslationRequestBuilder_0(
          this,
          Invocation.method(
            #withLanguageCode,
            [languageCode],
          ),
        ),
      ) as _i2.TranslationRequestBuilder);

  @override
  _i5.Future<_i3.Response> post() => (super.noSuchMethod(
        Invocation.method(
          #post,
          [],
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #post,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #post,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Response>);
}
