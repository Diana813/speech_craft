// Mocks generated by Mockito 5.4.4 from annotations
// in speech_craft/test/data/repositories/translation_repository_implementation_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:speech_craft/data/data_sources/translation_data/translation_remote_data_source.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TranslationRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTranslationRemoteDataSource extends _i1.Mock
    implements _i2.TranslationRemoteDataSource {
  @override
  _i3.Future<String> getTranslation({
    required String? keywords,
    required String? languageCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTranslation,
          [],
          {
            #keywords: keywords,
            #languageCode: languageCode,
          },
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #getTranslation,
            [],
            {
              #keywords: keywords,
              #languageCode: languageCode,
            },
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #getTranslation,
            [],
            {
              #keywords: keywords,
              #languageCode: languageCode,
            },
          ),
        )),
      ) as _i3.Future<String>);
}
